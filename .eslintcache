[{"H:\\Web development  by React\\projects\\jet-food\\src\\index.js":"1","H:\\Web development  by React\\projects\\jet-food\\src\\reportWebVitals.js":"2","H:\\Web development  by React\\projects\\jet-food\\src\\App.js":"3","H:\\Web development  by React\\projects\\jet-food\\src\\Components\\Header\\Header.js":"4","H:\\Web development  by React\\projects\\jet-food\\src\\Components\\HeaderMain\\HeaderMain.js":"5","H:\\Web development  by React\\projects\\jet-food\\src\\Components\\Category\\Category.js":"6","H:\\Web development  by React\\projects\\jet-food\\src\\Components\\Category\\SingleCategory.js":"7","H:\\Web development  by React\\projects\\jet-food\\src\\Components\\CategoryDetails\\CategoryDetails.js":"8","H:\\Web development  by React\\projects\\jet-food\\src\\FakeData\\FakeData.js":"9","H:\\Web development  by React\\projects\\jet-food\\src\\Components\\Subscribe\\Subscribe.js":"10","H:\\Web development  by React\\projects\\jet-food\\src\\Components\\SubscribeCategory\\SubscribeCategory.js":"11","H:\\Web development  by React\\projects\\jet-food\\src\\Components\\Test.js":"12","H:\\Web development  by React\\projects\\jet-food\\src\\Components\\Subscribe\\OptionsData.js":"13","H:\\Web development  by React\\projects\\jet-food\\src\\Components\\Cart\\Cart.js":"14","H:\\Web development  by React\\projects\\jet-food\\src\\Components\\MainCart\\MainCart.js":"15","H:\\Web development  by React\\projects\\jet-food\\src\\Components\\CartItem\\CartItem.js":"16","H:\\Web development  by React\\projects\\jet-food\\src\\Components\\CartHeader\\CartHeader.js":"17"},{"size":500,"mtime":499162500000,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":1394,"mtime":1610374956846,"results":"21","hashOfConfig":"19"},{"size":72651,"mtime":1610032156512,"results":"22","hashOfConfig":"19"},{"size":2174,"mtime":1610291015642,"results":"23","hashOfConfig":"19"},{"size":782,"mtime":1610375012414,"results":"24","hashOfConfig":"19"},{"size":1824,"mtime":1610190475955,"results":"25","hashOfConfig":"19"},{"size":691,"mtime":1610355745330,"results":"26","hashOfConfig":"19"},{"size":2041,"mtime":1610260401164,"results":"27","hashOfConfig":"19"},{"size":11210,"mtime":1610429261097,"results":"28","hashOfConfig":"19"},{"size":1613,"mtime":1610375090185,"results":"29","hashOfConfig":"19"},{"size":3679,"mtime":1610276246356,"results":"30","hashOfConfig":"19"},{"size":1765,"mtime":1610282916241,"results":"31","hashOfConfig":"19"},{"size":3031,"mtime":1610455569285,"results":"32","hashOfConfig":"19"},{"size":5375,"mtime":1610450987489,"results":"33","hashOfConfig":"19"},{"size":2548,"mtime":1610445066263,"results":"34","hashOfConfig":"19"},{"size":1179,"mtime":1610453442142,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"8min4p",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"H:\\Web development  by React\\projects\\jet-food\\src\\index.js",[],["76","77"],"H:\\Web development  by React\\projects\\jet-food\\src\\reportWebVitals.js",[],"H:\\Web development  by React\\projects\\jet-food\\src\\App.js",[],"H:\\Web development  by React\\projects\\jet-food\\src\\Components\\Header\\Header.js",[],"H:\\Web development  by React\\projects\\jet-food\\src\\Components\\HeaderMain\\HeaderMain.js",[],"H:\\Web development  by React\\projects\\jet-food\\src\\Components\\Category\\Category.js",["78"],"import { Container, Grid } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport fakeData from '../../FakeData/FakeData';\r\nimport SingleCategory from './SingleCategory';\r\n\r\n\r\n// const useStyles = makeStyles({\r\n//     root: {\r\n//       maxWidth: 345\r\n//     },\r\n//     media: {\r\n//       height: 180,\r\n//     },\r\n//   });\r\n\r\nconst Category = () => {\r\n\r\n    const [categories, setCategories] = useState(fakeData);\r\n\r\n\r\n    // const classes = useStyles();\r\n    return (\r\n        <Container>\r\n            <Grid container spacing={2}>\r\n\r\n                {\r\n                    categories.map(category => <SingleCategory key={category.id} category={category} />)\r\n                }\r\n\r\n            </Grid>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Category;","H:\\Web development  by React\\projects\\jet-food\\src\\Components\\Category\\SingleCategory.js",[],"H:\\Web development  by React\\projects\\jet-food\\src\\Components\\CategoryDetails\\CategoryDetails.js",["79"],"import React, { useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport fakeData from '../../FakeData/FakeData';\r\nimport SingleCategory from '../Category/SingleCategory';\r\n\r\n\r\n\r\n\r\nconst CategoryDetails = () => {\r\n\r\n    const { id } = useParams();\r\n    const category = fakeData.filter(cat => cat.id === parseInt(id) )\r\n    const [ catDetails, setCatDetails ] = useState(category[0]);\r\n\r\n  \r\n\r\n    return (\r\n        <div>\r\n            <h1>Category plan : {id}</h1>\r\n            <SingleCategory category={catDetails}></SingleCategory>\r\n            <Link to={`/subscribe/${id}`}>Go to subscribe</Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CategoryDetails;","H:\\Web development  by React\\projects\\jet-food\\src\\FakeData\\FakeData.js",[],"H:\\Web development  by React\\projects\\jet-food\\src\\Components\\Subscribe\\Subscribe.js",["80","81"],"import { Box, Grid, Paper, Switch, TextField } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport fakeData from '../../FakeData/FakeData';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport SubscribeCategory from '../SubscribeCategory/SubscribeCategory';\r\nimport { five, four, one, three, two, zero } from './OptionsData';\r\nimport Cart from '../Cart/Cart';\r\nimport { UserContext } from '../../App';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: \"90%\",\r\n        margin: \"0 auto\"\r\n    },\r\n    paper: {\r\n        padding: \"20px 30px\"\r\n    }\r\n})\r\n\r\n\r\n\r\nconst Subscribe = () => {\r\n\r\n    const [categories, setCategories] = useState(fakeData);\r\n\r\n    const [selectedCategory, setSelectedCategory] = useState(categories[0].id);\r\n\r\n    const [checked, setChecked] = useState({checked: false});\r\n    const [page, setPage] = useState(0);\r\n    const [orders, setOrders] = useState([]);\r\n    const [options, setOptions] = useState([]);\r\n    const [mealsTime, setMealsTime] = useState(\"\");\r\n    const [days, setDays] = useState(0);\r\n    const { id } = useParams();\r\n    \r\n   \r\n\r\n    const handleChange = (event) => {\r\n        setChecked({ ...checked, [event.target.name]: event.target.checked });\r\n        setPage(0);\r\n        setDays(0);\r\n    };\r\n\r\n\r\n    \r\n    const handleMealsClick = (event, value) => {\r\n      setPage(value);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(\"UseEffect\");\r\n        \r\n        if(id){\r\n            setSelectedCategory(parseInt(id))\r\n        } \r\n\r\n        if(page === 0){\r\n\r\n            setOptions([...zero])\r\n\r\n        }else if(page === 1){\r\n    \r\n            setOptions([...one])\r\n\r\n        } else if(page === 2){\r\n      \r\n            setOptions([...two])\r\n\r\n        } else if(page === 3){\r\n\r\n            setOptions([...three])\r\n\r\n        } else if(page === 4){\r\n\r\n            setOptions([...four])\r\n\r\n        } else if(page === 5){\r\n\r\n            setOptions([...five])\r\n        }\r\n\r\n    }, [page, id])\r\n\r\n    \r\n    const handleOptions = (event) => {\r\n        setMealsTime(event.target.value);\r\n    };\r\n\r\n    \r\n    const handleDaysClick = (event, value) => {\r\n        setDays(value);\r\n    };\r\n\r\n \r\n    const handleCategory = (cat) => {\r\n\r\n        setSelectedCategory(cat.id)\r\n        setPage(0);\r\n        setOptions([]);\r\n        setMealsTime(\"\");\r\n        setDays(0);\r\n        \r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n\r\n        if(checked && page && mealsTime && days && selectedCategory){\r\n\r\n            let period = \"\";\r\n            if(checked.checked){\r\n                \r\n                period = \"weekly\";\r\n            } else {\r\n\r\n                period = \"monthly\"\r\n            }\r\n\r\n            const orderData = {\r\n                    category: selectedCategory,\r\n                    period: period,\r\n                    meals: page,\r\n                    mealsTime: mealsTime,\r\n                    days: days,\r\n                    optionals: {\r\n                        juice: \"\"\r\n                    }\r\n    \r\n                }\r\n            \r\n            const order = [...orders, orderData]\r\n            setOrders(order);\r\n    \r\n        }\r\n\r\n\r\n    }, [checked, page, mealsTime, days, selectedCategory])\r\n\r\n\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n   const history = useHistory();\r\n    const handleAddToCart = () => {\r\n\r\n        console.log(\"Clicked add to cat button\");\r\n        setLoggedInUser({...loggedInUser, orders})\r\n        history.push(\"/cart\")\r\n        // const data = loggedInUser?.orders;\r\n        // if(data){\r\n        //     localStorage.setItem(\"Orders\", data);\r\n        // }\r\n\r\n    }\r\n\r\n    console.log(loggedInUser);\r\n    \r\n\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            \r\n            <Box className={classes.root}>\r\n                <Grid container>\r\n                    <Grid item md={8}>\r\n                        <Paper className={classes.paper}>\r\n                            <Box>\r\n                                <h3 style={{textAlign: \"center\", marginBottom: \"20px\"}}>Select Your Meal Plan</h3>\r\n                                <Grid container spacing={2}>\r\n                                    {\r\n                                        categories.map(category => <SubscribeCategory \r\n                                            handleCategory={handleCategory} \r\n                                            key={category.id} \r\n                                            category={category}\r\n                                            categories={categories}\r\n                                            selectedCategory={selectedCategory}\r\n                                            ></SubscribeCategory>)\r\n                                    }\r\n\r\n                                </Grid>\r\n                            </Box>\r\n                            <Box>\r\n                                <Grid container spacing={3}>\r\n                                    <Grid item xs={12} sm={2} md={2}>\r\n                                        <span >{\" \"}</span>\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={6} sm={4} md={6}>\r\n                                        <label >Period</label>\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={6} sm={6} md={4}>\r\n                                        <label htmlFor=\"period\">Monthly</label>\r\n                                        <Switch\r\n                                            id=\"period\"\r\n                                            checked={checked.checked}\r\n                                            onChange={handleChange}\r\n                                            name=\"checked\"\r\n                                            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                        />\r\n                                        <label htmlFor=\"period\">Weekly</label>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid container spacing={3}>\r\n                                    <Grid item xs={12} sm={2} md={2}>\r\n                                        <span >{\" \"}</span>\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={6} sm={4} md={6}>\r\n                                        <label htmlFor=\"meals\">Meals per day</label>\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={6} sm={6} md={4}>\r\n                                        <Pagination\r\n                                            onChange={handleMealsClick}\r\n                                            name=\"meals\"\r\n                                            count={5}\r\n                                            page={page}\r\n                                            hidePrevButton \r\n                                            hideNextButton\r\n                                            color=\"secondary\"\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <Grid container spacing={3}>\r\n                                    <Grid item xs={12} sm={2} md={2}>\r\n                                        <span >{\" \"}</span>\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={6} sm={4} md={6}>\r\n                                        <label htmlFor=\"options\">Meals options</label>\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={6} sm={6} md={4}>\r\n                                        <TextField\r\n                                            id=\"select\"\r\n                                            select\r\n                                            name=\"options\"\r\n                                            value={mealsTime}\r\n                                            onChange={handleOptions}\r\n                                            SelectProps={{\r\n                                                native: true,\r\n                                            }}\r\n                                            // helperText=\"Please select your meals\"\r\n                                        >\r\n                                            {options.map((option) => (\r\n                                                <option key={option.value} value={option.value}>\r\n                                                    {option.label}\r\n\r\n                                                </option>\r\n                                            ))}\r\n                                        </TextField>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                \r\n                                <Grid container spacing={3}>\r\n                                    <Grid item xs={12} sm={2} md={2}>\r\n                                        <span >{\" \"}</span>\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={6} sm={4} md={6}>\r\n                                        <label htmlFor=\"days\">Days per Week</label>\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={6} sm={6} md={4}>\r\n                                        <Pagination\r\n                                            onChange={handleDaysClick}\r\n                                            name=\"meals\"\r\n                                            count={7}\r\n                                            page={days}\r\n                                            hidePrevButton \r\n                                            hideNextButton\r\n                                            color=\"secondary\"\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Box>\r\n                            \r\n                            <hr/>\r\n\r\n                            <Box>\r\n                                <h3 style={{textAlign: \"center\"}}>Add your snacks and juices</h3>\r\n                                <label htmlFor=\"optional\">Protein Balls</label>\r\n                                <br/>\r\n\r\n                                <input type=\"radio\" name=\"juice\" id=\"first\"/> <label htmlFor=\"first\">3 ($9.50)</label> <br/>\r\n                                <input type=\"radio\" name=\"juice\" id=\"second\"/> <label htmlFor=\"second\">5 ($15.50)</label>\r\n                                \r\n                            </Box>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item md={4}>\r\n                        <Cart \r\n                            handleAddToCart={handleAddToCart} \r\n                            orders={orders}\r\n                        >\r\n                        </Cart>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Subscribe;","H:\\Web development  by React\\projects\\jet-food\\src\\Components\\SubscribeCategory\\SubscribeCategory.js",[],"H:\\Web development  by React\\projects\\jet-food\\src\\Components\\Test.js",["82","83","84"],"import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { purple } from '@material-ui/core/colors';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n\r\n\r\n// const PurpleSwitch = withStyles({\r\n\r\n//   switchBase: {\r\n//     color: purple[300],\r\n//     '&$checked': {\r\n//       color: purple[500],\r\n//     },\r\n//     '&$checked + $track': {\r\n//       backgroundColor: purple[500],\r\n//     },\r\n//   },\r\n//   checked: {},\r\n//   track: {},\r\n// })(Switch);\r\n\r\n\r\n\r\n\r\nconst IOSSwitch = withStyles((theme) => ({\r\n  root: {\r\n    width: 42,\r\n    height: 26,\r\n    padding: 0,\r\n    margin: theme.spacing(1),\r\n  },\r\n  switchBase: {\r\n    padding: 1,\r\n    '&$checked': {\r\n      transform: 'translateX(16px)',\r\n      color: theme.palette.common.white,\r\n      '& + $track': {\r\n        backgroundColor: '#52d869',\r\n        opacity: 1,\r\n        border: 'none',\r\n      },\r\n    },\r\n    '&$focusVisible $thumb': {\r\n      color: '#52d869',\r\n      border: '6px solid #fff',\r\n    },\r\n  },\r\n  thumb: {\r\n    width: 24,\r\n    height: 24,\r\n  },\r\n  track: {\r\n    borderRadius: 26 / 2,\r\n    border: `1px solid ${theme.palette.grey[400]}`,\r\n    backgroundColor: theme.palette.grey[50],\r\n    opacity: 1,\r\n    transition: theme.transitions.create(['background-color', 'border']),\r\n  },\r\n  checked: {},\r\n  focusVisible: {},\r\n}))(({ classes, ...props }) => {\r\n  return (\r\n    <Switch\r\n      focusVisibleClassName={classes.focusVisible}\r\n      disableRipple\r\n      classes={{\r\n        root: classes.root,\r\n        switchBase: classes.switchBase,\r\n        thumb: classes.thumb,\r\n        track: classes.track,\r\n        checked: classes.checked,\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\n\r\n\r\n\r\n// const AntSwitch = withStyles((theme) => ({\r\n//   root: {\r\n//     width: 28,\r\n//     height: 16,\r\n//     padding: 0,\r\n//     display: 'flex',\r\n//   },\r\n//   switchBase: {\r\n//     padding: 2,\r\n//     color: theme.palette.grey[500],\r\n//     '&$checked': {\r\n//       transform: 'translateX(12px)',\r\n//       color: theme.palette.common.white,\r\n//       '& + $track': {\r\n//         opacity: 1,\r\n//         backgroundColor: theme.palette.primary.main,\r\n//         borderColor: theme.palette.primary.main,\r\n//       },\r\n//     },\r\n//   },\r\n//   thumb: {\r\n//     width: 12,\r\n//     height: 12,\r\n//     boxShadow: 'none',\r\n//   },\r\n//   track: {\r\n//     border: `1px solid ${theme.palette.grey[500]}`,\r\n//     borderRadius: 16 / 2,\r\n//     opacity: 1,\r\n//     backgroundColor: theme.palette.common.white,\r\n//   },\r\n//   checked: {},\r\n// }))(Switch);\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function CustomizedSwitches() {\r\n  const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true,\r\n    checkedC: true,\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <FormGroup>\r\n        \r\n\r\n      {/* <FormControlLabel\r\n        control={<PurpleSwitch checked={state.checkedA} onChange={handleChange} name=\"checkedA\" />}\r\n        label=\"Custom color\"\r\n      /> */}\r\n\r\n\r\n\r\n      <FormControlLabel\r\n        control={<IOSSwitch checked={state.checkedB} onChange={handleChange} name=\"checkedB\" />}\r\n        label=\"iOS style\"\r\n      />\r\n\r\n\r\n      {/* <Typography component=\"div\">\r\n        <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\r\n          <Grid item>Off</Grid>\r\n          <Grid item>\r\n            <AntSwitch checked={state.checkedC} onChange={handleChange} name=\"checkedC\" />\r\n          </Grid>\r\n          <Grid item>On</Grid>\r\n        </Grid>\r\n      </Typography> */}\r\n\r\n\r\n    </FormGroup>\r\n  );\r\n}\r\n\r\n",["85","86"],"H:\\Web development  by React\\projects\\jet-food\\src\\Components\\Subscribe\\OptionsData.js",[],"H:\\Web development  by React\\projects\\jet-food\\src\\Components\\Cart\\Cart.js",[],"H:\\Web development  by React\\projects\\jet-food\\src\\Components\\MainCart\\MainCart.js",["87","88"],"H:\\Web development  by React\\projects\\jet-food\\src\\Components\\CartItem\\CartItem.js",[],"H:\\Web development  by React\\projects\\jet-food\\src\\Components\\CartHeader\\CartHeader.js",["89"],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":18,"column":24,"nodeType":"96","messageId":"97","endLine":18,"endColumn":37},{"ruleId":"94","severity":1,"message":"98","line":13,"column":25,"nodeType":"96","messageId":"97","endLine":13,"endColumn":38},{"ruleId":"94","severity":1,"message":"95","line":26,"column":24,"nodeType":"96","messageId":"97","endLine":26,"endColumn":37},{"ruleId":"99","severity":1,"message":"100","line":141,"column":8,"nodeType":"101","endLine":141,"endColumn":58,"suggestions":"102"},{"ruleId":"94","severity":1,"message":"103","line":3,"column":10,"nodeType":"96","messageId":"97","endLine":3,"endColumn":16},{"ruleId":"94","severity":1,"message":"104","line":7,"column":8,"nodeType":"96","messageId":"97","endLine":7,"endColumn":12},{"ruleId":"94","severity":1,"message":"105","line":8,"column":8,"nodeType":"96","messageId":"97","endLine":8,"endColumn":18},{"ruleId":"90","replacedBy":"106"},{"ruleId":"92","replacedBy":"107"},{"ruleId":"94","severity":1,"message":"108","line":13,"column":23,"nodeType":"96","messageId":"97","endLine":13,"endColumn":35},{"ruleId":"94","severity":1,"message":"109","line":14,"column":26,"nodeType":"96","messageId":"97","endLine":14,"endColumn":41},{"ruleId":"94","severity":1,"message":"110","line":1,"column":27,"nodeType":"96","messageId":"97","endLine":1,"endColumn":31},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'setCategories' is assigned a value but never used.","Identifier","unusedVar","'setCatDetails' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'orders'. Either include it or remove the dependency array.","ArrayExpression",["113"],"'purple' is defined but never used.","'Grid' is defined but never used.","'Typography' is defined but never used.",["111"],["112"],"'setCartItems' is assigned a value but never used.","'setLoggedInUser' is assigned a value but never used.","'List' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},"Update the dependencies array to be: [checked, page, mealsTime, days, selectedCategory, orders]",{"range":"116","text":"117"},[3275,3325],"[checked, page, mealsTime, days, selectedCategory, orders]"]